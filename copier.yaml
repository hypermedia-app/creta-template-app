_subdirectory: src
_templates_suffix: .jinja
_answers_file: .copier-workspace.yaml

_envops:
  block_end_string: "%}"
  block_start_string: "{%"
  comment_end_string: "#}"
  comment_start_string: "{#"
  keep_trailing_newline: true
  variable_end_string: "}}"
  variable_start_string: "{{"


_tasks:
  - "git init"
  - '{% for api in apis %}npx npm-add-script -f -k copier:{{api}} -v "copier -a .copier-{{api}}.yaml update"; {% endfor %}'
  - 'npx npm-add-script -f -k "bootstrap:vocabs" -v "talos put-vocabs --endpoint \$SPARQL_ENDPOINT --user \$SPARQL_USER --password \$SPARQL_PASSWORD{% for vocab_spec in vocabs %} --extraVocabs {{vocab_spec}}{% endfor %}"'
  - 'npx npm-add-script -f -k start -v "knossos-ts serve \$SPARQL_ENDPOINT --name \$APP_NAME --user \$SPARQL_USER --password \$SPARQL_PASSWORD{% if apis|length > 1 %} --routePath "\$API_ROOTS"{% endif %}"'
  - 'npx npm-add-script -f -k "copier:root" -v "copier -a{% for api in apis %} -s apps/{{api}}{% endfor %} {{_copier_conf.answers_file}} update"'
  - "npx json -If package.json 
      -e 'this.name=\"{{app_name}}\"'
      -e 'this.author=\"{{author}} <{{email}}>\"'
      -e 'this.repository=\"{{repository}}\"'
    "
  - "npx json -If apps/www/package.json 
      -e 'this.name=\"@{{app_name}}/app\"'
    "
  - "npx json -If apps/ontodia/package.json 
      -e 'this.name=\"@{{app_name}}/explorer\"'
    "
  - ["{{ _copier_python }}", '.copier/_generate_apis.py']
  - ["{{ _copier_python }}", '_delete_copier_dir_and_self.py']

author:
  type: str
  help: Author field for package.jsons
  default: Hypermedia App

email:
  type: str
  help: Email field for package.jsons
  default: no-reply@hypermedia.app

project_name:
  type: str
  help: Human-readable name
  default: Hypermedia App

app_name:
  type: str
  help: Short name (no spaces)
  default: '{{ project_name.lower().replace(" ", "-") }}'

apis:
  type: yaml
  multiline: true
  default:
    - api

ui_path:
  type: str
  help: Path at which to serve the web application (no leading slash)
  default: app

vocabs:
  type: yaml
  when: "{{vocabs}}"
  default: []
  multiline: true
  help: >-
    Additional vocabularies to insert to the store from vocabulary packages.
    
    NOTE: This must be an array and every entry should be formatted as described on https://creta.hypermedia.app/#/talos?id=additional-vocabularies

    For example:
      - "@zazuko/rdf-vocabularies,dash,geo"
      - "@org/vocabularies"

repository:
  type: str
  default: https://github.com/org/repo

node_version:
  type: str
  help: Any valid node version. Used to run local env and CI
  default: 16

debugger_port:
  default: "{{ range(20000,65536) | random }}"
